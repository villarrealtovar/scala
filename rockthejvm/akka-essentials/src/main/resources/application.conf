pekko {
  loglevel = "DEBUG"
}


mySpecialConfig {
  pekko {
    loglevel = "INFO"
  }
}

# routers demo (lesson02FaultTolerance/L02Routers.scala)
routersDemo {
  pekko {
    actor.deployment {
      /poolMaster2 {
        router = round-robin-pool
        nr-of-instances = 5
      }
      /groupMaster2 {
        router = round-robin-group
        routees.paths = ["/user/slave-1", "/user/slave-2", "/user/slave-3", "/user/slave-4", "/user/slave-5"]
      }
    }
  }
} 

# L03Dispatchers

my-dispatcher{ 
  type = Dispatcher # there are also PinnedDispatcher, CallingThreadDispatche CallingThreadDispatcher 
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 1
  }
  throughput = 30
}

dispatchersDemo {
  pekko.actor.deployment {
   /liftCode {
     dispatcher = my-dispatcher
   } 
  }
}


#L04Mailboxes


mailboxesDemo {
  control-mailbox {
     mailbox-type = "org.apache.pekko.dispatch.UnboundedControlAwareMailbox"
  }
  support-ticket-dispatcher {
    mailbox-type = "lesson03Infra.L04Mailboxes$SupportTicketPriorityMailbox"
  }

  pekko.actor.deployment {
    /alternativeControlAwareActor {
      mailbox = control-mailbox
        mailbox = control-mailbox
    }
  }
}
